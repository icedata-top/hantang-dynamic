# Bilibili Dynamic Subscribe Configuration Example
# Copy this file to config.toml and fill in your values
# Data flow: Input → Processing → Output

[bilibili]
# Required: Your Bilibili user ID and session data
uid = "12345678"               # Your Bilibili user ID
sessdata = "your_sessdata"     # Your Bilibili session data

# Optional: Additional authentication tokens for user relation operations
csrf_token = ""                # BILI_JCT - CSRF token for user relation operations
access_key = ""                # BILI_ACCESS_KEY - Access key for app authentication

[application]
# Application behavior settings
log_level = "info"             # Log level: debug, info, warn, error
fetch_interval = 900000        # Fetch interval in milliseconds (default: 15 minutes)
api_retry_times = 3            # Number of API retry attempts
api_wait_time = 2000           # Wait time between API calls in milliseconds
max_history_days = 7           # Maximum days of history to fetch
max_item = 0                   # Maximum number of items to fetch (0 for unlimited)

[processing]
[processing.features]
# Feature toggles
enable_tag_fetch = false       # Whether to fetch video tags
enable_user_relation = false   # Toggle for user relation features
enable_deduplication = true    # Enable AID-based deduplication (default: true)

[processing.filtering]
# Content filtering settings
type_id_whitelist = []         # Array of video type IDs to include (e.g., [28, 30, 130])
content_blacklist = []         # Array of content blacklist keywords
content_whitelist = []         # Array of content whitelist keywords

[processing.deduplication]
aids_duckdb_path = ""          # AIDS tracking DuckDB (default: "./data/aids.duckdb")

[export]
[export.csv]
# CSV file export settings
path = ""                      # CSV file path (default: "./data/uid{BILIBILI_UID}.csv")

[export.duckdb]
# DuckDB file export settings
path = ""                      # DuckDB file path (default: "./data/uid{BILIBILI_UID}.duckdb")

[export.mysql]
# MySQL export settings (all optional)
host = ""                      # MySQL server IP
port = 3306                    # MySQL server port
username = ""                  # MySQL username
password = ""                  # MySQL password
database = ""                  # MySQL database name
table = ""                     # MySQL table name

[notifications]
[notifications.telegram]
# Telegram notification settings (both required if using Telegram)
bot_token = ""                 # Telegram bot token
chat_id = ""                   # Telegram chat ID

[notifications.email]
# Email notification settings (all required if using email)
host = ""                      # SMTP server host (e.g., "smtp.gmail.com")
port = 587                     # SMTP server port
username = ""                  # Email username
password = ""                  # Email password or app password
from = ""                      # Sender email address
to = ""                        # Recipient email address

[notifications.http]
# HTTP notification settings
enabled = false                # Enable HTTP notifications
timeout = 5000                 # Request timeout in milliseconds
retries = 3                    # Number of retry attempts

# Global headers for all HTTP requests
[notifications.http.headers]
# "Authorization" = "Bearer your-token"
# "User-Agent" = "hantang-dynamic/1.0"

# Example: GET request with query parameters
# [[notifications.http.endpoints]]
# url = "https://api.example.com/notify"
# method = "GET"
# [notifications.http.endpoints.params]
# message = "{{message}}"
# video_id = "{{bvid}}"
# title = "{{title}}"
# author = "{{author}}"

# HTTP notification endpoints (supports multiple endpoints)
# [[notifications.http.endpoints]]
# url = "https://api.example.com/webhook"
# method = "POST"
# headers = { "Content-Type" = "application/json" }
# body = '''
# {
#   "message": "{{message}}",
#   "data": {
#     "aid": "{{aid}}",
#     "bvid": "{{bvid}}",
#     "title": "{{title}}",
#     "author": "{{author}}",
#     "url": "{{url}}",
#     "timestamp": "{{timestamp}}"
#   }
# }
# '''

# Example: Discord webhook
# [[notifications.http.endpoints]]
# url = "https://discord.com/api/webhooks/YOUR_WEBHOOK_ID/YOUR_WEBHOOK_TOKEN"
# method = "POST"
# headers = { "Content-Type" = "application/json" }
# body = '''
# {
#   "content": "{{message}}",
#   "embeds": [
#     {
#       "title": "{{title}}",
#       "url": "{{url}}",
#       "color": 5814783,
#       "fields": [
#         {
#           "name": "作者",
#           "value": "{{author}}",
#           "inline": true
#         },
#         {
#           "name": "视频ID",
#           "value": "{{bvid}}",
#           "inline": true
#         }
#       ],
#       "timestamp": "{{timestamp}}"
#     }
#   ]
# }
# '''
